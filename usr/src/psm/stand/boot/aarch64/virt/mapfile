OUTPUT_FORMAT("elf64-littleaarch64")
OUTPUT_ARCH(aarch64)
ENTRY(_start)


SECTIONS
{
	. = 0x40080000;
	_BootStart = .;
	.text : {
		*(.text)
		*(.text.*)
		. = ALIGN(0x16);
		*(.rodata)
		*(.rodata.*)
		_etext = .;
	}
	.data : {
		*(.data)
		*(.data.*)
		CONSTRUCTORS
		*(.got)
		*(.got.*)
		*(.sdata)
		*(.sdata.*)
		. = ALIGN(0x8);
		_edata = .;

		*(.sbss)
		*(.sbss.*)
		*(.scommon)
		*(.bss)
		*(.bss.*)
		*(COMMON)
		. = ALIGN(0x8);
		_ebss = .;
	}
	. = ALIGN(0x1000);
	_end = . ;
	. = . + 0x10000;
	_BootStackTop = .;
	_LogBuf       = .;
	. = . + 0x100000;
	_BootScratch  = .;
	. = . + 0x4000000;
	_RamdiskStart = .;
	# XXXARM: This is a truly massive -- 400MB -- allowance
	# for the boot_archive.  This is so that if you build
	# the whole system with DWARF for debugging, we can still load it.
	# It is otherwise incredibly regrettable.
	. = . + 0x19000000;
	_RamdiskEnd  = .;
	_dtb_start   = .;
	. = . + 0x20000;
	_BootEnd     = .;
}
